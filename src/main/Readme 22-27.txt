ДЗ_25

Паттерн «Одиночка» классы: PoolConnections, FactorySql.
В данном случае обеспечивает наличие одного экземпляра, экономит память и ресурсы, 
обеспечивает согласованность действий.

Паттерн «Фабричный метод» классы: LogFactory, FactoryUser, HandlerRequestInstance.
Не раскрывает логики т.е. скрывает фактическую логику реализации объекта, способствует 
слабой связи между компонентами, появляется возможность создавать разные объекты
 реализующие один интерфейс, а также позволяет  предварительно подготовить необходимые 
ресурсы( класс: HandlerRequestInstance) .

ДЗ_26

Паттерн «Адаптер» классы:LogApplicationLog4j и LogApplicationJul оба implements LogApplication
Две реализации логгеров с разными интерфейсами были приведены  к одному виду (интерфейсу). 
Обеспечивает легкую замену и слабую связанность.

ДЗ-27

Паттерн «Цепочка обязанностей» классы: HandlerService.
Позволил связать в единую цепочку объекты получающие запрос, позволяет менять количество объектов 
в цепочке без изменения кода т.е избежать жестко зашитой последовательности обработки запрпоса. 
В данном случае достаточно добавить объекты реализующие интерфейс Node или унаследованные от 
абстрактного класса ChainLink и добавить запись в файл config.properties.
